(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{iyWB:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return m}));var n=t("wx14"),c=t("Ff2n"),o=t("q1tI"),s=t.n(o),b=t("7ljp"),p=(s.a.createElement,{}),r="wrapper";function m(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(b.b)(r,Object(n.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(b.b)("p",null,"BitTorrent is a protocol for downloading and distributing files across the Internet. In contrast with the traditional client/server relationship, in which downloaders connect to a central server (for example: watching a movie on Netflix, or loading the web page you're reading now), participants in the BitTorrent network, called ",Object(b.b)("strong",{parentName:"p"},"peers"),", download pieces of files from ",Object(b.b)("em",{parentName:"p"},"each other"),"\u2014this is what makes it a ",Object(b.b)("strong",{parentName:"p"},"peer-to-peer")," protocol. In this article we will investigate how this works, and build our own client that can find peers and exchange data between them."),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/client-server-p2p.png",alt:"diagram showing the difference between client/server (all clients connecting to one server) and peer-to-peer (peers connecting to each other) relationships"}))),Object(b.b)("p",null,"The protocol evolved organically over the past 20 years, and various people and organizations added extensions for features like encryption, private torrents, and new ways of finding peers. We'll be implementing the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.bittorrent.org/beps/bep_0003.html"}),"original spec")," from 2001 to keep this a weekend-sized project."),Object(b.b)("p",null,"I'll be using a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://cdimage.debian.org/debian-cd/current/amd64/bt-cd/#indexlist"}),"Debian ISO")," file as my guinea pig because it's big, but not huge, at 350MB. As a popular Linux distribution, there will be lots of fast and cooperative peers for us to connect to. And we'll avoid the legal and ethical issues related to downloading pirated content."),Object(b.b)("h2",null,"Finding peers"),Object(b.b)("p",null,"Here\u2019s a problem: we want to download a file with BitTorrent, but it\u2019s a peer-to-peer protocol and we have no idea where to find peers to download it from. This is a lot like moving to a new city and trying to make friends\u2014maybe we\u2019ll hit up a local pub or a meetup group! Centralized locations like these are the big idea behind trackers, which are central servers that introduce peers to each other. They\u2019re just web servers running over HTTP, and you can find Debian\u2019s at ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"http://bttracker.debian.org:6969/"}),"http://bttracker.debian.org:6969/")),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/trackers.png",alt:"illustration of a desktop computer and laptop sitting at a pub"}))),Object(b.b)("p",null,"Of course, these central servers are liable to get raided by the feds if they facilitate peers exchanging illegal content. You may remember reading about trackers like TorrentSpy, Popcorn Time, and KickassTorrents getting seized and shut down. New methods cut out the middleman by making even ",Object(b.b)("strong",{parentName:"p"},"peer discovery")," a distributed process. We won't be implementing them, but if you're interested, some terms you can research are ",Object(b.b)("strong",{parentName:"p"},"DHT"),", ",Object(b.b)("strong",{parentName:"p"},"PEX"),", and ",Object(b.b)("strong",{parentName:"p"},"magnet links"),"."),Object(b.b)("h3",null,"Parsing a .torrent file"),Object(b.b)("p",null,"A .torrent file describes the contents of a torrentable file and information for connecting to a tracker. It's all we need in order to kickstart the process of downloading a torrent. Debian's .torrent file looks like this:"),Object(b.b)("pre",{className:"language-markdown"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-markdown"}),'d8:announce41:http://bttracker.debian.org:6969/announce7:comment35:"Debian CD from cdimage.debian.org"13:creation datei1573903810e9:httpseedsl145:https://cdimage.debian.org/cdimage/release/10.2.0//srv/cdbuilder.debian.org/dst/deb-cd/weekly-builds/amd64/iso-cd/debian-10.2.0-amd64-netinst.iso145:https://cdimage.debian.org/cdimage/archive/10.2.0//srv/cdbuilder.debian.org/dst/deb-cd/weekly-builds/amd64/iso-cd/debian-10.2.0-amd64-netinst.isoe4:infod6:lengthi351272960e4:name31:debian-10.2.0-amd64-netinst.iso12:piece lengthi262144e6:pieces26800:\ufffd\x1f\ufffd\x0f\ufffd\ufffd\ufffdPS\ufffd^\ufffd\ufffd (binary blob of the hashes of each piece)ee\n')),Object(b.b)("p",null,"That mess is encoded in a format called ",Object(b.b)("strong",{parentName:"p"},"Bencode")," (pronounced ",Object(b.b)("em",{parentName:"p"},"bee-encode"),"), and we'll need to decode it."),Object(b.b)("p",null,"Bencode can encode roughly the same types of structures as JSON\u2014strings, integers, lists, and dictionaries. Bencoded data is not as human-readable/writable as JSON, but it can efficiently handle binary data and it's really simple to parse from a stream. Strings come with a length prefix, and look like ",Object(b.b)("inlineCode",{parentName:"p"},"4:spam"),". Integers go between ",Object(b.b)("em",{parentName:"p"},"start")," and ",Object(b.b)("em",{parentName:"p"},"end")," markers, so ",Object(b.b)("inlineCode",{parentName:"p"},"7")," would encode to ",Object(b.b)("inlineCode",{parentName:"p"},"i7e"),". Lists and dictionaries work in a similar way: ",Object(b.b)("inlineCode",{parentName:"p"},"l4:spami7ee")," represents ",Object(b.b)("inlineCode",{parentName:"p"},"['spam', 7]"),", while ",Object(b.b)("inlineCode",{parentName:"p"},"d4:spami7ee")," means ",Object(b.b)("inlineCode",{parentName:"p"},"{spam: 7}"),"."),Object(b.b)("p",null,"In a prettier format, our .torrent file looks like this:"),Object(b.b)("pre",{className:"language-markdown"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-markdown"}),'d\n  8:announce\n    41:http://bttracker.debian.org:6969/announce\n  7:comment\n    35:"Debian CD from cdimage.debian.org"\n  13:creation date\n    i1573903810e\n  4:info\n    d\n      6:length\n        i351272960e\n      4:name\n        31:debian-10.2.0-amd64-netinst.iso\n      12:piece length\n        i262144e\n      6:pieces\n        26800:\ufffd\x1f\ufffd\x0f\ufffd\ufffd\ufffdPS\ufffd^\ufffd\ufffd (binary blob of the hashes of each piece)\n    e\ne\n')),Object(b.b)("p",null,"In this file, we can spot the URL of the tracker, the creation date (as a Unix timestamp), the name and size of the file, and a big binary blob containing the SHA-1 hashes of each ",Object(b.b)("strong",{parentName:"p"},"piece"),", which are equally-sized parts of the file we want to download. The exact size of a piece varies between torrents, but they are usually somewhere between 256KB and 1MB. This means that a large file might be made up of ",Object(b.b)("em",{parentName:"p"},"thousands")," of pieces. We'll download these pieces from our peers, check them against the hashes from our torrent file, assemble them together, and boom, we've got a file!"),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/pieces.png",alt:'"illustration of a file being cut with scissors into multiple pieces, starting with piece 0'}))),Object(b.b)("p",null,"This mechanism allows us to verify the integrity of each piece as we go. It makes BitTorrent resistant to accidental corruption or intentional ",Object(b.b)("strong",{parentName:"p"},"torrent poisoning"),". Unless an attacker is capable of breaking SHA-1 with a preimage attack, we will get exactly the content we asked for."),Object(b.b)("p",null,"It would be really fun to write a bencode parser, but parsing isn't our focus today. But I found Fredrik Lundh's ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://effbot.org/zone/bencode.htm"}),"50 line parser")," to be especially illuminating. For this project, I used ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jackpal/bencode-go"}),"github.com/jackpal/bencode-go"),":"),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"github.com/jackpal/bencode-go"'),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," bencodeInfo ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    Pieces      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'`bencode:"pieces"`'),"\n    PieceLength ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'`bencode:"piece length"`'),"\n    Length      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'`bencode:"length"`'),"\n    Name        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'`bencode:"name"`'),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," bencodeTorrent ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    Announce ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),"      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'`bencode:"announce"`'),"\n    Info     bencodeInfo ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'`bencode:"info"`'),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Open parses a torrent file"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Open"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"r io",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Reader",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"bencodeTorrent",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    bto ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," bencodeTorrent",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," bencode",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Unmarshal"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"r",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&"),"bto",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&"),"bto",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("p",null,"Because I like to keep my structures relatively flat, and I like to keep my application structs separate from my serialization structs, I exported a different, flatter struct named ",Object(b.b)("inlineCode",{parentName:"p"},"TorrentFile")," and wrote a few helper functions to convert between the two."),Object(b.b)("p",null,"Notably, I split ",Object(b.b)("inlineCode",{parentName:"p"},"pieces")," (previously a string) into a slice of hashes (each ",Object(b.b)("inlineCode",{parentName:"p"},"[20]byte"),") so that I can easily access individual hashes later. I also computed the SHA-1 hash of the entire bencoded ",Object(b.b)("inlineCode",{parentName:"p"},"info")," dict (the one which contained the name, size, and piece hashes). We know this as the ",Object(b.b)("strong",{parentName:"p"},"infohash")," and it uniquely identifies files when we talk to trackers and peers. More on this later."),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/info-hash.png",alt:"a name tag saying 'Hello my name is 86d4c80024a469be4c50bc5a102cf71780310074'"}))),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," TorrentFile ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    Announce    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),"\n    InfoHash    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"20"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n    PieceHashes ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"20"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n    PieceLength ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"\n    Length      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"\n    Name        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"bto ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"bencodeTorrent",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"toTorrentFile"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"TorrentFile",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h3",null,"Retrieving peers from the tracker"),Object(b.b)("p",null,"Now that we have information about the file and its tracker, let's talk to the tracker to ",Object(b.b)("strong",{parentName:"p"},"announce")," our presence as a peer and to retrieve a list of other peers. We just need to make a GET request to the ",Object(b.b)("inlineCode",{parentName:"p"},"announce")," URL supplied in the .torrent file, with a few query parameters:"),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"TorrentFile",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"buildTrackerURL"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peerID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"20"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," port ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"uint16"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    base",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," url",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Parse"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Announce",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'""'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    params ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," url",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Values",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"info_hash"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"InfoHash",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"peer_id"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peerID",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"port"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"       ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"strconv",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Itoa"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"int"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"Port",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"uploaded"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"   ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"0"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"downloaded"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"0"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"compact"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"1"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"left"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"       ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"strconv",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Itoa"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    base",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"RawQuery ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," params",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Encode"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," base",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"String"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("p",null,"The important ones:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"info_hash"),": Identifies the ",Object(b.b)("em",{parentName:"li"},"file")," we're trying to download. It's the infohash we calculated earlier from the bencoded ",Object(b.b)("inlineCode",{parentName:"li"},"info")," dict. The tracker will use this to figure out which peers to show us."),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"peer_id"),": A 20 byte name to identify ",Object(b.b)("em",{parentName:"li"},"ourselves")," to trackers and peers. We'll just generate 20 random bytes for this. Real BitTorrent clients have IDs like ",Object(b.b)("inlineCode",{parentName:"li"},"-TR2940-k8hj0wgej6ch")," which identify the client software and version\u2014in this case, TR2940 stands for Transmission client 2.94.")),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/info-hash-peer-id.png",alt:"a file with a name tag saying 'info_hash' and a person with a name tag 'peer_id'"}))),Object(b.b)("h3",null,"Parsing the tracker response"),Object(b.b)("p",null,"We get back a bencoded response:"),Object(b.b)("pre",{className:"language-markdown"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-markdown"}),"d\n  8:interval\n    i900e\n  5:peers\n    252:(another long binary blob)\ne\n")),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"Interval")," tells us how often we're supposed to connect to the tracker again to refresh our list of peers. A value of 900 means we should reconnect every 15 minutes (900 seconds)."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"Peers")," is another long binary blob containing the IP addresses of each peer. It's made out of ",Object(b.b)("strong",{parentName:"p"},"groups of six bytes"),". The first four bytes in each group represent the peer's IP address\u2014each byte represents a number in the IP. The last two bytes represent the port, as a big-endian ",Object(b.b)("inlineCode",{parentName:"p"},"uint16"),". ",Object(b.b)("strong",{parentName:"p"},"Big-endian"),", or ",Object(b.b)("strong",{parentName:"p"},"network order"),", means that we can interpret a group of bytes as an integer by just squishing them together left to right. For example, the bytes ",Object(b.b)("inlineCode",{parentName:"p"},"0x1A"),", ",Object(b.b)("inlineCode",{parentName:"p"},"0xE1")," make ",Object(b.b)("inlineCode",{parentName:"p"},"0x1AE1"),", or 6881 in decimal."),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/address.png",alt:"diagram showing how 192, 0, 2, 123, 0x1A, 0xE1 can be interpreted as 192.0.1.123:6881"}))),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Peer encodes connection information for a peer"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," Peer ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    IP   net",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"IP\n    Port ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"uint16"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Unmarshal parses peer IP addresses and ports from a buffer"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Unmarshal"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peersBin ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"Peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"const")," peerSize ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"6")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// 4 for IP, 2 for port"),"\n    numPeers ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peersBin",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"/")," peerSize\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peersBin",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"%"),"peerSize ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," fmt",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Errorf"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Received malformed peers"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    peers ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"Peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," numPeers",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," i ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";")," i ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<")," numPeers",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),";")," i",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"++")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        offset ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," i ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*")," peerSize\n        peers",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"IP ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," net",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"IP"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peersBin",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"offset ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," offset",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        peers",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"i",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Port ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," binary",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"BigEndian",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Uint16"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peersBin",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"offset",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," offset",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"6"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," peers",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h2",null,"Downloading from peers"),Object(b.b)("p",null,"Now that we have a list of peers, it's time to connect with them and start downloading pieces! We can break down the process into a few steps. For each peer, we want to:"),Object(b.b)("ol",null,Object(b.b)("li",{parentName:"ol"},"Start a TCP connection with the peer. This is like starting a phone call."),Object(b.b)("li",{parentName:"ol"},"Complete a two-way BitTorrent ",Object(b.b)("strong",{parentName:"li"},"handshake"),". ",Object(b.b)("em",{parentName:"li"},'"Hello?" "Hello."')),Object(b.b)("li",{parentName:"ol"},"Exchange ",Object(b.b)("strong",{parentName:"li"},"messages")," to download ",Object(b.b)("strong",{parentName:"li"},"pieces"),". ",Object(b.b)("em",{parentName:"li"},'"I\'d like piece #231 please."'))),Object(b.b)("h2",null,"Start a TCP connection"),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),"conn",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," net",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"DialTimeout"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"tcp"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"String"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"3"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"time",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Second",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("p",null,"I set a timeout so that I don't waste too much time on peers that aren't going to let me connect. For the most part, it's a pretty standard TCP connection."),Object(b.b)("h3",null,"Complete the handshake"),Object(b.b)("p",null,"We've just set up a connection with a peer, but we want do a handshake to validate our assumptions that the peer"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"can communicate using the BitTorrent protocol"),Object(b.b)("li",{parentName:"ul"},"is able to understand and respond to our messages"),Object(b.b)("li",{parentName:"ul"},"has the file that we want, or at least knows what we're talking about")),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/handshake.png",alt:"Two computers communicating. One asks 'do you speak BitTorrent and have this file?' and the other replies 'I speak BitTorrent and have that file'"}))),Object(b.b)("p",null,"My father told me that the secret to a good handshake is a firm grip and eye contact. The secret to a good BitTorrent handshake is that it's made up of five parts:"),Object(b.b)("ol",null,Object(b.b)("li",{parentName:"ol"},"The length of the protocol identifier, which is always 19 (0x13 in hex)"),Object(b.b)("li",{parentName:"ol"},"The protocol identifier, called the ",Object(b.b)("strong",{parentName:"li"},"pstr")," which is always ",Object(b.b)("inlineCode",{parentName:"li"},"BitTorrent protocol")),Object(b.b)("li",{parentName:"ol"},"Eight ",Object(b.b)("strong",{parentName:"li"},"reserved bytes"),", all set to 0. We'd flip some of them to 1 to indicate that we support certain ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"http://www.bittorrent.org/beps/bep_0010.html"}),"extensions"),". But we don't, so we'll keep them at 0."),Object(b.b)("li",{parentName:"ol"},"The ",Object(b.b)("strong",{parentName:"li"},"infohash")," that we calculated earlier to identify which file we want"),Object(b.b)("li",{parentName:"ol"},"The ",Object(b.b)("strong",{parentName:"li"},"Peer ID")," that we made up to identify ourselves")),Object(b.b)("p",null,"Put together, a handshake string might look like this:"),Object(b.b)("pre",{className:"language-markdown"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-markdown"}),"\\x13BitTorrent protocol\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x86\\xd4\\xc8\\x00\\x24\\xa4\\x69\\xbe\\x4c\\x50\\xbc\\x5a\\x10\\x2c\\xf7\\x17\\x80\\x31\\x00\\x74-TR2940-k8hj0wgej6ch\n")),Object(b.b)("p",null,"After we send a handshake to our peer, we should receive a handshake back in the same format. The infohash we get back should match the one we sent so that we know that we're talking about the same file. If everything goes as planned, we're good to go. If not, we can sever the connection because there's something wrong. ",Object(b.b)("em",{parentName:"p"},'"Hello?" "\u8fd9\u662f\u8c01\uff1f \u4f60\u60f3\u8981\u4ec0\u4e48\uff1f" "Okay, wow, wrong number."')),Object(b.b)("p",null,"In our code, let's make a struct to represent a handshake, and write a few methods for serializing and reading them:"),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// A Handshake is a special message that a peer uses to identify itself"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," Handshake ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    Pstr     ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"string"),"\n    InfoHash ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"20"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n    PeerID   ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"20"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Serialize serializes the handshake to a buffer"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"h ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"Handshake",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Serialize"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    buf ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"h",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Pstr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"49"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"h",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Pstr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    curr ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1"),"\n    curr ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"copy"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"curr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," h",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Pstr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    curr ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"copy"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"curr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"8"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// 8 reserved bytes"),"\n    curr ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"copy"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"curr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," h",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"InfoHash",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    curr ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"copy"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"curr",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," h",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"PeerID",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," buf\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Read parses a handshake from a stream"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Read"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"r io",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Reader",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"Handshake",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Do Serialize(), but backwards"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h3",null,"Send and receive messages"),Object(b.b)("p",null,"Once we've completed the initial handshake, we can send and receive ",Object(b.b)("strong",{parentName:"p"},"messages"),". Well, not quite\u2014if the other peer isn't ready to accept messages, we can't send any until they tell us they're ready. In this state, we're considered ",Object(b.b)("strong",{parentName:"p"},"choked")," by the other peer. They'll send us an ",Object(b.b)("strong",{parentName:"p"},"unchoke")," message to let us know that we can begin asking them for data. By default, we assume that we're choked until proven otherwise."),Object(b.b)("p",null,"Once we've been unchoked, we can then begin sending ",Object(b.b)("strong",{parentName:"p"},"requests")," for pieces, and they can send us messages back containing pieces."),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/choke.png",alt:"\"A cartoon in which person 1 says 'hello I would like piece number\u2014' and person 2 grabs him by the neck and says '00 00 00 01 00 (choke)'"}))),Object(b.b)("h4",null,"Interpreting messages"),Object(b.b)("p",null,"A message has a length, an ",Object(b.b)("strong",{parentName:"p"},"ID")," and a ",Object(b.b)("strong",{parentName:"p"},"payload"),". On the wire, it looks like:"),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/message.png",alt:"A message with 4 byte for the length, 1 byte for ID, and an optional payload"}))),Object(b.b)("p",null,"A message starts with a length indicator which tells us how many bytes long the message will be. It's a 32-bit integer, meaning it's made out of four bytes smooshed together in big-endian order. The next byte, the ",Object(b.b)("strong",{parentName:"p"},"ID"),", tells us which type of message we're receiving\u2014for example, a ",Object(b.b)("inlineCode",{parentName:"p"},"2"),' byte means "interested." Finally, the optional ',Object(b.b)("strong",{parentName:"p"},"payload")," fills out the remaining length of the message."),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"uint8"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"const")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"\n    MsgChoke         messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),"\n    MsgUnchoke       messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1"),"\n    MsgInterested    messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"2"),"\n    MsgNotInterested messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"3"),"\n    MsgHave          messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),"\n    MsgBitfield      messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"5"),"\n    MsgRequest       messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"6"),"\n    MsgPiece         messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"7"),"\n    MsgCancel        messageID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"8"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Message stores ID and payload of a message"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," Message ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ID      messageID\n    Payload ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Serialize serializes a message into a buffer of the form"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// <length prefix><message ID><payload>"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Interprets `nil` as a keep-alive message"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"m ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"Message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Serialize"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," m ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"==")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"uint32"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"m",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Payload",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// +1 for id"),"\n    buf ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+"),"length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    binary",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"BigEndian",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"PutUint32"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"m",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"ID",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"copy"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"5"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," m",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Payload",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," buf\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("p",null,"To read a message from a stream, we just follow the format of a message. We read four bytes and interpret them as a ",Object(b.b)("inlineCode",{parentName:"p"},"uint32")," to get the ",Object(b.b)("strong",{parentName:"p"},"length")," of the message. Then, we read that number of bytes to get the ",Object(b.b)("strong",{parentName:"p"},"ID")," (the first byte) and the ",Object(b.b)("strong",{parentName:"p"},"payload")," (the remaining bytes)."),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Read parses a message from a stream. Returns `nil` on keep-alive message"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Read"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"r io",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Reader",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"Message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    lengthBuf ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"4"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"_"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," io",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"ReadFull"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"r",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," lengthBuf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," binary",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"BigEndian",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Uint32"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"lengthBuf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// keep-alive message"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"==")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    messageBuf ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"_"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," io",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"ReadFull"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"r",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," messageBuf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    m ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," Message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ID",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"messageID"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"messageBuf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        Payload",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," messageBuf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&"),"m",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h4",null,"Bitfields"),Object(b.b)("p",null,"One of the most interesting types of message is the ",Object(b.b)("strong",{parentName:"p"},"bitfield"),", which is a data structure that peers use to efficiently encode which pieces they are able to send us. A bitfield looks like a byte array, and to check which pieces they have, we just need to look at the positions of the ",Object(b.b)("em",{parentName:"p"},"bits")," set to 1. You can think of it like the digital equivalent of a coffee shop loyalty card. We start with a blank card of all ",Object(b.b)("inlineCode",{parentName:"p"},"0"),", and flip bits to ",Object(b.b)("inlineCode",{parentName:"p"},"1"),' to mark their positions as "stamped."'),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/bitfield.png",alt:"a coffee shop loyalty card with eight slots, with stamps on the first four slots and a stamp on the second to last slot, represented as 11110010"}))),Object(b.b)("p",null,"By working with ",Object(b.b)("em",{parentName:"p"},"bits")," instead of ",Object(b.b)("em",{parentName:"p"},"bytes"),", this data structure is super compact. We can stuff information about eight pieces in the space of a single byte\u2014the size of a ",Object(b.b)("inlineCode",{parentName:"p"},"bool"),". The tradeoff is that accessing values becomes a little more tricky. The smallest unit of memory that computers can address are bytes, so to get to our bits, we have to do some bitwise manipulation:"),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// A Bitfield represents the pieces that a peer has"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," Bitfield ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// HasPiece tells if a bitfield has a particular index set"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"bf Bitfield",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"HasPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"index ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"bool")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    byteIndex ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," index ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"/")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"8"),"\n    offset ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," index ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"%")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"8"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," bf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"byteIndex",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),">>"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"7"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"-"),"offset",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// SetPiece sets a bit in the bitfield"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"bf Bitfield",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SetPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"index ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    byteIndex ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," index ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"/")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"8"),"\n    offset ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," index ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"%")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"8"),"\n    bf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"byteIndex",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"|=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<<")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"7")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"-")," offset",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h3",null,"Putting it all together"),Object(b.b)("p",null,"We now have all the tools we need to download a torrent: we have a list of peers obtained from the tracker, and we can communicate with them by dialing a TCP connection, initiating a handshake, and sending and receiving messages. Our last big problems are handling the ",Object(b.b)("strong",{parentName:"p"},"concurrency")," involved in talking to multiple peers at once, and managing the ",Object(b.b)("strong",{parentName:"p"},"state")," of our peers as we interact with them. These are both classically Hard problems."),Object(b.b)("h4",null,"Managing concurrency: channels as queues"),Object(b.b)("p",null,"In Go, we ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://blog.golang.org/share-memory-by-communicating"}),"share memory by communicating"),", and we can think of a Go channel as a cheap thread-safe queue."),Object(b.b)("p",null,"We'll set up two channels to synchronize our concurrent workers: one for dishing out work (pieces to download) between peers, and another for collecting downloaded pieces. As downloaded pieces come in through the results channel, we can copy them into a buffer to start assembling our complete file."),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Init queues for workers to retrieve work and send results"),"\nworkQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"chan")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"pieceWork",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"PieceHashes",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\nresults ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"chan")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"pieceResult",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," hash ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"range")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"PieceHashes ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"calculatePieceSize"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    workQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<-")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&"),"pieceWork",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," hash",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Start workers"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"_"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," peer ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"range")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Peers ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"go")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"startDownloadWorker"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," workQueue",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," results",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Collect results into a buffer until full"),"\nbuf ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\ndonePieces ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," donePieces ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"len"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"PieceHashes",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    res ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<-"),"results\n    begin",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," end ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"calculateBoundsForPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"res",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"copy"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),"begin",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"end",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," res",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    donePieces",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"++"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"close"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"workQueue",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n")),Object(b.b)("p",null,"We'll spawn a worker goroutine for each peer we've received from the tracker. It'll connect and handshake with the peer, and then start retrieving work from the ",Object(b.b)("inlineCode",{parentName:"p"},"workQueue"),", attempting to download it, and sending downloaded pieces back through the ",Object(b.b)("inlineCode",{parentName:"p"},"results")," channel."),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/download.png",alt:"a flow chart of the download strategy"}))),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"t ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"Torrent",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"startDownloadWorker"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peer peers",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," workQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"chan")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"pieceWork",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," results ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"chan")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"pieceResult",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"New"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"PeerID",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," t",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"InfoHash",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        log",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Printf"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Could not handshake with %s. Disconnecting\\n"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"IP",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"defer")," c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Conn",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Close"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    log",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Printf"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Completed handshake with %s\\n"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," peer",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"IP",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\n    c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SendUnchoke"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SendInterested"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," pw ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"range")," workQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!"),"c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Bitfield",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"HasPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            workQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<-")," pw ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Put piece back on the queue"),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"continue"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Download the piece"),"\n        buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"attemptDownloadPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            log",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Println"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Exiting"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n            workQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<-")," pw ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Put piece back on the queue"),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n        err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"checkIntegrity"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            log",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Printf"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Piece #%d failed integrity check\\n"'),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n            workQueue ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<-")," pw ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Put piece back on the queue"),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"continue"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n        c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SendHave"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        results ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<-")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&"),"pieceResult",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h4",null,"Managing state"),Object(b.b)("p",null,"We'll keep track of each peer in a struct, and modify that struct as we read messages. It'll include data like how much we've downloaded from the peer, how much we've requested from them, and whether we're choked. If we wanted to scale this further, we could formalize this as a finite state machine. But a struct and a switch are good enough for now."),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"type")," pieceProgress ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"struct")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    index      ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"\n    client     ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Client\n    buf        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),"\n    downloaded ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"\n    requested  ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"\n    backlog    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"state ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"pieceProgress",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"readMessage"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    msg",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Read"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// this call blocks"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"switch")," msg",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"ID ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"case")," message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"MsgUnchoke",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n        state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Choked ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"false"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"case")," message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"MsgChoke",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n        state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Choked ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"true"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"case")," message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"MsgHave",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n        index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"ParseHave"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"msg",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Bitfield",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SetPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"case")," message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"MsgPiece",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n        n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," message",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"ParsePiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," msg",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"downloaded ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," n\n        state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"backlog",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"--"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h4",null,"Time to make requests!"),Object(b.b)("p",null,"Files, pieces, and piece hashes aren't the full story\u2014we can go further by breaking down pieces into ",Object(b.b)("strong",{parentName:"p"},"blocks"),". A block is a part of a piece, and we can fully define a block by the ",Object(b.b)("strong",{parentName:"p"},"index")," of the piece it's part of, its byte ",Object(b.b)("strong",{parentName:"p"},"offset")," within the piece, and its ",Object(b.b)("strong",{parentName:"p"},"length"),". When we make requests for data from peers, we are actually requesting ",Object(b.b)("em",{parentName:"p"},"blocks"),". A block is usually 16KB large, meaning that a single 256 KB piece might actually require 16 requests."),Object(b.b)("p",null,"A peer is supposed to sever the connection if they receive a request for a block larger than 16KB. However, based on my experience, they're often perfectly happy to satisfy requests up to 128KB. I only got moderate gains in overall speed with larger block sizes, so it's probably better to stick with the spec."),Object(b.b)("h4",null,"Pipelining"),Object(b.b)("p",null,"Network round-trips are expensive, and requesting each block one by one will absolutely tank the performance of our download. Therefore, it's important to ",Object(b.b)("strong",{parentName:"p"},"pipeline")," our requests such that we keep up a constant pressure of some number of unfulfilled requests. This can increase the throughput of our connection by an order of magnitude."),Object(b.b)("p",null,Object(b.b)("img",Object(n.a)({parentName:"p"},{src:"/guides/torrent-client/pipelining.png",alt:"Two email threads simulating peer connections. The thread on the left shows a request followed by a reply, repeated three times. The thread on the left sends three requests, and receives three replies in quick succession."}))),Object(b.b)("p",null,"Classically, BitTorrent clients kept a queue of five pipelined requests, and that's the value I'll be using. I found that increasing it can up to double the speed of a download. Newer clients use an ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://luminarys.com/posts/writing-a-bittorrent-client.html"}),"adaptive")," queue size to better accommodate modern network speeds and conditions. This is definitely a parameter worth tweaking, and it's pretty low hanging fruit for future performance optimization."),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// MaxBlockSize is the largest number of bytes a request can ask for"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"const")," MaxBlockSize ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"16384"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// MaxBacklog is the number of unfulfilled requests a client can have in its pipeline"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"const")," MaxBacklog ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"5"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"attemptDownloadPiece"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"c ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," pw ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*"),"pieceWork",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"error"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    state ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," pieceProgress",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"  pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":")," c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n        buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"make"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"byte"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Setting a deadline helps get unresponsive peers unstuck."),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// 30 seconds is more than enough time to download a 262 KB piece"),"\n    c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Conn",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SetDeadline"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"time",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Now"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Add"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"30")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"*")," time",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Second",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"defer")," c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Conn",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SetDeadline"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"time",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Time",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Disable the deadline"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"downloaded ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// If unchoked, send requests until we have enough unfulfilled requests"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!"),"state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"client",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Choked ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"backlog ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<")," MaxBacklog ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"&&")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"requested ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n                blockSize ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," MaxBlockSize\n                ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token comment"}),"// Last block might be shorter than the typical block"),"\n                ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"length",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"-"),"state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"requested ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"<")," blockSize ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n                    blockSize ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"length ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"-")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"requested\n                ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n                err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," c",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"SendRequest"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"pw",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"index",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"requested",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," blockSize",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n                ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n                    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n                ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n                state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"backlog",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"++"),"\n                state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"requested ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," blockSize\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n        err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"readMessage"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n            ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err\n        ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"return")," state",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"buf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("h4",null,"main.go"),Object(b.b)("p",null,"This is a short one. We're almost there."),Object(b.b)("pre",{className:"language-go"},Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"package")," main\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"import")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"log"'),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"os"'),"\n\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"github.com/veggiedefender/torrent-client/torrentfile"'),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"func")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"main"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    inPath ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," os",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Args",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"1"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n    outPath ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," os",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),"Args",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"2"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n\n    tf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),",")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),":=")," torrentfile",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Open"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"inPath",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        log",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Fatal"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"err",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," tf",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"DownloadToFile"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"outPath",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"if")," err ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"!=")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token boolean"}),"nil")," ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        log",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token function"}),"Fatal"),Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"err",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(b.b)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n")),Object(b.b)("script",{id:"asciicast-xqRSB0Jec8RN91Zt89rbb9PcL",src:"https://asciinema.org/a/xqRSB0Jec8RN91Zt89rbb9PcL.js",async:!0}),Object(b.b)("h2",null,"This isn't the full story"),Object(b.b)("p",null,"For brevity, I included only a few of the important snippets of code. Notably, I left out all the glue code, parsing, unit tests, and the boring parts that build character. View my ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/veggiedefender/torrent-client"}),"full implementation")," if you're interested."))}m.isMDXComponent=!0}}]);